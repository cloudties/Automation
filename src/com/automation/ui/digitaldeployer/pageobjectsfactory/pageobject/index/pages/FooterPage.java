package com.automation.ui.digitaldeployer.pageobjectsfactory.pageobject.index.pages;/** * @author */import com.automation.ui.base.common.core.assertion.Assertion;import com.automation.ui.base.common.core.element.dropdown.DropDownHelper;import com.automation.ui.base.common.prpreaders.AssertDataReader;import com.automation.ui.digitaldeployer.pageobjectsfactory.pageobject.base.ProjectBasePageObject;import com.automation.ui.digitaldeployer.pageobjectsfactory.pageobject.home.pages.HeaderPage;import com.automation.ui.digitaldeployer.pageobjectsfactory.pageobject.home.xpathconstants.HomeConstants;import com.automation.ui.digitaldeployer.pageobjectsfactory.pageobject.index.vo.InitialSearchVO;import com.automation.ui.digitaldeployer.pageobjectsfactory.pageobject.index.xpathconstants.FooterConstants;import com.automation.ui.digitaldeployer.pageobjectsfactory.pageobject.index.xpathconstants.IndexConstants;import org.apache.log4j.Logger;import org.openqa.selenium.WebElement;import org.openqa.selenium.support.CacheLookup;import org.openqa.selenium.support.FindBy;import org.testng.Assert;import org.testng.Reporter;public class FooterPage extends ProjectBasePageObject {    private static Logger logger = Logger.getLogger(FooterPage.class);    @FindBy(xpath = FooterConstants.PRIVACY)    private WebElement privacy;    @FindBy(xpath = FooterConstants.TERMS)    private WebElement terms;    @FindBy(xpath = FooterConstants.DDTWITTER)    private WebElement cuspTwitter;    @FindBy(xpath = FooterConstants.LINKEDINBUTTON)    private WebElement linkedInButton;    @FindBy(xpath = FooterConstants.LANGSELECT)    @CacheLookup    private WebElement langselect;    public HeaderPage langselect() {        try {            waitAndClick(langselect);            Thread.sleep(3000);        } catch (Exception e) {            e.printStackTrace();            Assert.fail(AssertDataReader.assertreader.getValue("DDASSERTMSG_ASSERT_ERROR"));            Reporter.log("continueauth failed");        }        return new HeaderPage();    }    public FooterPage open() {        logger.debug("open the URL" + getCurrentUrl());        getUrl(getCurrentUrl());        return this;    }}