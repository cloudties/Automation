package com.automation.ui.ipe.pageobjectsfactory.pageobject.hwd.pages;/** * @author Manjusha Saju */import com.automation.ui.ipe.pageobjectsfactory.pageobject.base.IPEBasePageObject;import com.automation.ui.ipe.pageobjectsfactory.pageobject.hwd.xpathconstants.HWDCommonDetailsCONSTANTS;import com.automation.ui.ipe.pageobjectsfactory.pageobject.hwd.xpathconstants.HWDConstants;import org.apache.log4j.Logger;import org.openqa.selenium.WebElement;import org.openqa.selenium.support.FindBy;import org.testng.Reporter;import com.automation.ui.base.common.core.assertion.Assertion;import com.automation.ui.base.common.prpreaders.AssertDataReader;public class HWDrawingPage extends IPEBasePageObject {    private static Logger logger = Logger.getLogger(HWDrawingPage.class);    @FindBy(xpath = HWDConstants.SEARCHFORFILEINPUT)    private WebElement searchHWDInput;    @FindBy(xpath = HWDCommonDetailsCONSTANTS.HWDINFO)    private WebElement detailHWDInfo;    public HWDrawingPage open() {        logger.debug("open the URL" + getCurrentUrl());        getUrl(getCurrentUrl());        return this;    }    public void clickHWDInfo() {        try {            logger.debug("View questions in the section- HWD Information");            Thread.sleep(3000);            waitAndClick(detailHWDInfo);            logger.debug("Displayed questions in the section-HWD Information ");        } catch (Exception e) {            Assertion.fail(AssertDataReader.assertreader.getValue("IPEASSERTMSG_ASSERT_ERROR"));            Reporter.log("clickHWDInfo");            e.printStackTrace();        }    }    public void hwdSearch(String search) {        try {            logger.debug("Navigating hwdSearch");            clickHWDInfo();            fillInputAfterClear(searchHWDInput, search);            logger.debug("hwdSearch");        } catch (Exception e) {            e.printStackTrace();        }    }}