package com.automation.ui.ipe.pageobjectsfactory.pageobject.overview.pages;/** * @author Manjusha Saju */import com.automation.ui.base.common.core.assertion.Assertion;import com.automation.ui.base.common.prpreaders.AssertDataReader;import com.automation.ui.ipe.pageobjectsfactory.pageobject.base.IPEBasePageObject;import com.automation.ui.ipe.pageobjectsfactory.pageobject.home.xpathconstants.HomeConstants;import com.automation.ui.ipe.pageobjectsfactory.pageobject.hwd.xpathconstants.HWDCommonDetailsCONSTANTS;import com.automation.ui.ipe.pageobjectsfactory.pageobject.hwd.xpathconstants.HWDConstants;import com.automation.ui.ipe.pageobjectsfactory.pageobject.overview.xpathconstants.OverviewCONSTANTS;import org.apache.log4j.Logger;import org.openqa.selenium.WebElement;import org.openqa.selenium.support.FindBy;import org.testng.Reporter;import org.json.JSONException;import org.json.JSONObject;import org.openqa.selenium.chrome.ChromeDriver;import org.openqa.selenium.chrome.ChromeOptions;import org.openqa.selenium.logging.LogEntries;import org.openqa.selenium.logging.LogEntry;import org.openqa.selenium.logging.LogType;import java.util.Iterator;import java.util.logging.Level;import org.json.JSONException;import org.json.JSONObject;import org.openqa.selenium.logging.LogEntries;import org.openqa.selenium.logging.LogEntry;import org.openqa.selenium.logging.LogType;import org.openqa.selenium.logging.LoggingPreferences;public class OverViewPage extends IPEBasePageObject {    private static Logger logger = Logger.getLogger(OverViewPage.class);    @FindBy(xpath = HomeConstants.OVERVIEWMENUBUTTON_HOMEPAGE)    private WebElement overview;    @FindBy(xpath = OverviewCONSTANTS.PAGELINK)    private WebElement pagelink;    @FindBy(xpath = OverviewCONSTANTS.SERGREGATION)    private WebElement sega;    @FindBy(xpath = OverviewCONSTANTS.SAVE)    private WebElement overviewSaveAndContinue;    @FindBy(xpath = OverviewCONSTANTS.FAIL)    private WebElement fail;    @FindBy(xpath = OverviewCONSTANTS.INPUTVOLTAGE)    private WebElement volLevel;    public OverViewPage open() {        logger.debug("open the URL" + getCurrentUrl());        getUrl(getCurrentUrl());        return this;    }    public void clickOverViewInfo() {        try {             Thread.sleep(1000);            waitAndClick(overview);         } catch (Exception e) {            Assertion.fail(AssertDataReader.assertreader.getValue("IPEASSERTMSG_ASSERT_ERROR"));             e.printStackTrace();        }    }    public void clickPageLinkInfo() {        try {            Thread.sleep(1000);            waitAndClick(pagelink);        } catch (Exception e) {            Assertion.fail(AssertDataReader.assertreader.getValue("IPEASSERTMSG_ASSERT_ERROR"));            e.printStackTrace();        }    }    public void clickSegregation( ) {        try {            Thread.sleep(1000);            waitAndClick(sega);        } catch (Exception e) {            Assertion.fail(AssertDataReader.assertreader.getValue("IPEASSERTMSG_ASSERT_ERROR"));            e.printStackTrace();        }    }    public void testCheck() {        try {            clickOverViewInfo();            Thread.sleep(1000);            clickPageLinkInfo();            Thread.sleep(1000);            clickSegregation();            Thread.sleep(1000);            fail.click();            volLevel.sendKeys("ttttt");            Thread.sleep(1000);            clickDEQSaveAndContinue();       } catch (Exception e) {            Assertion.fail(AssertDataReader.assertreader.getValue("IPEASSERTMSG_ASSERT_ERROR"));            e.printStackTrace();        }    }    public void clickDEQSaveAndContinue() {        try {            logger.debug("Click- DEQ: Save And Continue button");            Thread.sleep(1000);            waitAndClick(overviewSaveAndContinue);            logger.debug("Click- DEQ: Save And Continue button ");        } catch (Exception e) {            Assertion.fail(AssertDataReader.assertreader.getValue("IPEASSERTMSG_ASSERT_ERROR"));            Reporter.log("Click- DEQ: Save And Continue button");            e.printStackTrace();        }    }}